"""empty message

Revision ID: 0d15f9e1b910
Revises:
Create Date: 2023-04-01 15:36:51.984518

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0d15f9e1b910"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=512), nullable=False),
        sa.Column("api_token", sa.String(length=255), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_updated"), ["updated"], unique=False)

    op.create_table(
        "day",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=32), nullable=True),
        sa.Column("menstrual", sa.String(length=32), nullable=True),
        sa.Column("indicator", sa.String(length=32), nullable=True),
        sa.Column("color", sa.String(length=32), nullable=True),
        sa.Column("sensation", sa.String(length=32), nullable=True),
        sa.Column("frequency", sa.String(length=32), nullable=True),
        sa.Column("peak", sa.Boolean(), nullable=True),
        sa.Column("day_count", sa.Integer(), nullable=True),
        sa.Column("intercourse", sa.Boolean(), nullable=True),
        sa.Column("notes", sa.String(length=512), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("new_cycle", sa.Boolean(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("date"),
    )
    with op.batch_alter_table("day", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_day_updated"), ["updated"], unique=False)

    op.create_table(
        "day_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(length=32), nullable=True),
        sa.Column("menstrual", sa.String(length=32), nullable=True),
        sa.Column("indicator", sa.String(length=32), nullable=True),
        sa.Column("color", sa.String(length=32), nullable=True),
        sa.Column("sensation", sa.String(length=32), nullable=True),
        sa.Column("frequency", sa.String(length=32), nullable=True),
        sa.Column("peak", sa.Boolean(), nullable=True),
        sa.Column("day_count", sa.Integer(), nullable=True),
        sa.Column("intercourse", sa.Boolean(), nullable=True),
        sa.Column("notes", sa.String(length=512), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("new_cycle", sa.Boolean(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("day_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_day_history_updated"), ["updated"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("day_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_day_history_updated"))

    op.drop_table("day_history")
    with op.batch_alter_table("day", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_day_updated"))

    op.drop_table("day")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_updated"))

    op.drop_table("user")
    # ### end Alembic commands ###
